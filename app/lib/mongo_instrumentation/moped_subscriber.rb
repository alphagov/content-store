module MongoInstrumentation
  # Object for consuming events generated by the mongodb driver.
  #
  # Subscribers must implement started, succeeded and failed, but we do nothing
  # for started.
  #
  # This uses `MongoInstrumentation::RuntimeRegistry` to store the cumulative
  # duration of mongo queries.
  class MonitoringSubscriber
    def self.runtime=(value)
      MongoInstrumentation::RuntimeRegistry.mongo_runtime = value
    end

    def self.runtime
      MongoInstrumentation::RuntimeRegistry.mongo_runtime ||= 0
    end

    def self.reset_runtime
      self.runtime = 0
    end

    def started(event); end

    def succeeded(event)
      self.class.runtime += event.duration
    end

    def failed(event)
      self.class.runtime += event.duration
    end
  end
end

Mongo::Monitoring::Global.subscribe(Mongo::Monitoring::COMMAND, MongoInstrumentation::MonitoringSubscriber.new)
